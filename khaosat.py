# File: khaosat.py

import streamlit as st
import pandas as pd
import os
import qrcode
from io import BytesIO
from PIL import Image
from streamlit_autorefresh import st_autorefresh

# --- C·∫§U H√åNH CHUNG ---
st.set_page_config(page_title="Kh·∫£o s√°t K·ªπ nƒÉng",
                   page_icon="üß†", layout="centered")

# T·ª± ƒë·ªông l√†m m·ªõi to√†n b·ªô trang sau m·ªói 10 gi√¢y ƒë·ªÉ c·∫≠p nh·∫≠t k·∫øt qu·∫£
st_autorefresh(interval=10000, key="global_refresh")

# File d·ªØ li·ªáu
VOTE_FILE = "votes.csv"

# Danh s√°ch c√¢u h·ªèi
yes_no_questions = [
    "1. Khi b·∫°n b√® r·ªß r√™ l√†m ƒëi·ªÅu kh√¥ng mu·ªën, em c√≥ th·∫•y kh√≥ x·ª≠ khi t·ª´ ch·ªëi kh√¥ng?",
    "2. ƒê√£ bao gi·ªù em l√†m ƒëi·ªÅu tr√°i √Ω m√¨nh ch·ªâ v√¨ s·ª£ m·∫•t l√≤ng b·∫°n b√®?",
    "3. Khi ƒë·ª©ng tr∆∞·ªõc m·ªôt l·ªùi r·ªß r√™, em c√≥ t·ª± tin ph√¢n bi·ªát ƒëi·ªÅu ƒë√∫ng ‚Äì sai hay kh√¥ng?",
    "4. Em c√≥ bi·∫øt c√°ch n√≥i ‚ÄúKh√¥ng‚Äù m√† v·∫´n gi·ªØ ƒë∆∞·ª£c s·ª± t√¥n tr·ªçng v√† m·ªëi quan h·ªá v·ªõi ng∆∞·ªùi kh√°c?",
    "5. Em c√≥ mu·ªën h·ªçc c√°ch t·ª´ ch·ªëi m·∫°nh m·∫Ω, r√µ r√†ng nh∆∞ng v·∫´n tinh t·∫ø, kh√¥ng l√†m ng∆∞·ªùi kh√°c bu·ªìn?",
    "6. Em c√≥ bi·∫øt n√™n l√†m g√¨ ƒë·ªÉ gi·ªØ an to√†n khi ph·∫£i ƒëi m·ªôt m√¨nh ·ªü n∆°i v·∫Øng ng∆∞·ªùi?",
    "7. Khi ai ƒë√≥ khi·∫øn em th·∫•y kh√¥ng tho·∫£i m√°i b·∫±ng l·ªùi n√≥i hay h√†nh ƒë·ªông, em c√≥ ƒë·ªß d≈©ng c·∫£m ƒë·ªÉ l√™n ti·∫øng kh√¥ng?",
    "8. N·∫øu c·∫£m th·∫•y lo l·∫Øng, b·∫•t an, khi r∆°i v√†o t√¨nh hu·ªëng nguy hi·ªÉm, em th∆∞·ªùng t√¨m ƒë·∫øn ai ƒë·ªÉ chia s·∫ª v√† nh·ªù h·ªó tr·ª£?",
]
text_questions = [
    "9. ƒê√£ bao gi·ªù em r∆°i v√†o t√¨nh hu·ªëng b·ªã b·∫Øt n·∫°t ho·∫∑c ƒëe d·ªça ch∆∞a? L√∫c ƒë√≥ em x·ª≠ l√Ω th·∫ø n√†o?",
    "10. Em c√≥ mong mu·ªën ƒë∆∞·ª£c h·ªçc th√™m v·ªÅ k·ªπ nƒÉng t·ª± v·ªá kh√¥ng? V√¨ sao em cho r·∫±ng vi·ªác h·ªçc k·ªπ nƒÉng n√†y l√† c·∫ßn thi·∫øt (ho·∫∑c kh√¥ng c·∫ßn thi·∫øt) trong cu·ªôc s·ªëng h√†ng ng√†y?",
]

# T√™n c·ªôt trong file CSV
column_names = [
    f"Q{i+1}" for i in range(len(yes_no_questions))] + ["Q9_text", "Q10_text"]

# H√†m kh·ªüi t·∫°o file d·ªØ li·ªáu


def initialize_data_file():
    if not os.path.exists(VOTE_FILE):
        df_init = pd.DataFrame(columns=column_names)
        df_init.to_csv(VOTE_FILE, index=False, encoding='utf-8-sig')

# --- GIAO DI·ªÜN CH√çNH ---


initialize_data_file()

st.title("üß† Kh·∫£o s√°t: K·ªπ nƒÉng n√≥i 'Kh√¥ng' v√† T·ª± v·ªá")

# T·∫°o c√°c tab
tab1, tab2, tab3 = st.tabs(
    ["üìù Th·ª±c hi·ªán Kh·∫£o s√°t", "üìä K·∫øt qu·∫£ Tr·∫Øc nghi·ªám", "üó£Ô∏è Ph·∫£n h·ªìi T·ª± lu·∫≠n"])

# --- TAB 1: TH·ª∞C HI·ªÜN KH·∫¢O S√ÅT ---
with tab1:
    st.header("ƒêi·ªÅn th√¥ng tin kh·∫£o s√°t")

    # QR Code truy c·∫≠p
    with st.expander("üì± Qu√©t m√£ QR ƒë·ªÉ b·∫°n b√® c√πng tham gia"):
        # Thay b·∫±ng URL th·∫≠t c·ªßa b·∫°n khi deploy
        url = "https://surveyssss.streamlit.app/"
        qr = qrcode.make(url)
        buf = BytesIO()
        qr.save(buf)
        buf.seek(0)
        st.image(Image.open(buf), width=180)

    st.divider()

    # Form ph·∫£n h·ªìi
    if "submitted" not in st.session_state:
        st.session_state.submitted = False

    if not st.session_state.submitted:
        with st.form("survey_form"):
            st.subheader("Ph·∫ßn 1: Tr·∫Øc nghi·ªám")
            user_yes_no_votes = []
            for i, q in enumerate(yes_no_questions):
                vote = st.radio(q, ["‚úÖ C√≥", "‚ùå Kh√¥ng"],
                                key=f"q{i}", index=None, horizontal=True)
                user_yes_no_votes.append(vote)

            st.subheader("Ph·∫ßn 2: T·ª± lu·∫≠n")
            text_answer_9 = st.text_area(
                text_questions[0], height=100, key="q9")
            text_answer_10 = st.text_area(
                text_questions[1], height=100, key="q10")

            submitted = st.form_submit_button("üì§ G·ª≠i ph·∫£n h·ªìi")
            if submitted:
                if None in user_yes_no_votes:
                    st.error(
                        "üö® Vui l√≤ng tr·∫£ l·ªùi t·∫•t c·∫£ c√°c c√¢u h·ªèi tr·∫Øc nghi·ªám ·ªü Ph·∫ßn 1.")
                else:
                    processed_votes = [
                        "Yes" if v == "‚úÖ C√≥" else "No" for v in user_yes_no_votes]
                    all_answers = processed_votes + \
                        [text_answer_9, text_answer_10]

                    df_old = pd.read_csv(VOTE_FILE)
                    new_row = pd.DataFrame([all_answers], columns=column_names)
                    df_new = pd.concat([df_old, new_row], ignore_index=True)
                    df_new.to_csv(VOTE_FILE, index=False, encoding='utf-8-sig')

                    st.session_state.submitted = True
                    st.success("üéâ C·∫£m ∆°n b·∫°n ƒë√£ ho√†n th√†nh kh·∫£o s√°t!")
                    st.balloons()
                    st.rerun()  # T·∫£i l·∫°i trang ƒë·ªÉ hi·ªÉn th·ªã th√¥ng b√°o ƒë√£ g·ª≠i
    else:
        st.info("‚úÖ B·∫°n ƒë√£ g·ª≠i ph·∫£n h·ªìi. H√£y xem k·∫øt qu·∫£ ·ªü c√°c tab b√™n c·∫°nh.")

    st.divider()
    # Qu·∫£n l√Ω d·ªØ li·ªáu (D√†nh cho Admin)
    with st.expander("üîê Qu·∫£n l√Ω d·ªØ li·ªáu (D√†nh cho Qu·∫£n tr·ªã vi√™n)"):
        password = st.text_input(
            "Nh·∫≠p m·∫≠t kh·∫©u ƒë·ªÉ x√≥a d·ªØ li·ªáu", type="password")
        if st.button("üóëÔ∏è X√≥a to√†n b·ªô d·ªØ li·ªáu"):
            if password == "112233":
                initialize_data_file()  # T·∫°o l·∫°i file r·ªóng
                st.session_state.submitted = False
                st.success("‚úÖ ƒê√£ x√≥a to√†n b·ªô d·ªØ li·ªáu. Trang s·∫Ω t·ª± l√†m m·ªõi.")
                st.rerun()
            elif password:
                st.error("‚ùå M·∫≠t kh·∫©u kh√¥ng ch√≠nh x√°c.")


# --- TAB 2: K·∫æT QU·∫¢ TR·∫ÆC NGHI·ªÜM ---
with tab2:
    st.header("Th·ªëng k√™ c√¢u h·ªèi tr·∫Øc nghi·ªám")
    st.caption("D·ªØ li·ªáu ƒë∆∞·ª£c c·∫≠p nh·∫≠t t·ª± ƒë·ªông.")

    try:
        df = pd.read_csv(VOTE_FILE)
        if df.empty:
            st.info("‚è≥ Ch∆∞a c√≥ d·ªØ li·ªáu kh·∫£o s√°t.")
        else:
            st.success(f"**T·ªïng s·ªë l∆∞·ª£t ph·∫£n h·ªìi: {len(df)}**")
            st.divider()
            for i, q in enumerate(yes_no_questions):
                col_name = f"Q{i+1}"
                if col_name in df.columns:
                    yes_count = (df[col_name] == "Yes").sum()
                    no_count = (df[col_name] == "No").sum()
                    total = yes_count + no_count

                    if total > 0:
                        yes_percent = round(yes_count / total * 100, 1)
                        st.markdown(f"**{q}**")
                        st.progress(
                            yes_percent / 100, text=f"‚úÖ C√≥: {yes_percent}% ({yes_count} phi·∫øu)")
                        st.write(
                            f"‚Ü≥ *Trong ƒë√≥ c√≥ **{no_count}** phi·∫øu tr·∫£ l·ªùi 'Kh√¥ng'.*")
                        st.markdown("---")
    except FileNotFoundError:
        st.info("‚è≥ Ch∆∞a c√≥ d·ªØ li·ªáu kh·∫£o s√°t. H√£y l√† ng∆∞·ªùi ƒë·∫ßu ti√™n tr·∫£ l·ªùi!")
    except Exception as e:
        st.error(f"L·ªói khi ƒë·ªçc d·ªØ li·ªáu: {e}")

# --- TAB 3: PH·∫¢N H·ªíI T·ª∞ LU·∫¨N ---
with tab3:
    st.header("T·ªïng h·ª£p c√¢u tr·∫£ l·ªùi t·ª± lu·∫≠n")
    st.caption("C√°c c√¢u tr·∫£ l·ªùi ƒë∆∞·ª£c c·∫≠p nh·∫≠t t·ª± ƒë·ªông.")

    try:
        df = pd.read_csv(VOTE_FILE)
        if df.empty:
            st.info("‚è≥ Ch∆∞a c√≥ d·ªØ li·ªáu kh·∫£o s√°t.")
        else:
            # C√¢u 9
            st.subheader(f"C√¢u h·ªèi: {text_questions[0]}")
            answers_q9 = df["Q9_text"].dropna().unique()
            if len(answers_q9) > 0:
                for ans in answers_q9:
                    if str(ans).strip():
                        st.info(f"üó£Ô∏è {ans}")
            else:
                st.write("_Ch∆∞a c√≥ c√¢u tr·∫£ l·ªùi._")

            st.divider()

            # C√¢u 10
            st.subheader(f"C√¢u h·ªèi: {text_questions[1]}")
            answers_q10 = df["Q10_text"].dropna().unique()
            if len(answers_q10) > 0:
                for ans in answers_q10:
                    if str(ans).strip():
                        st.info(f"üí° {ans}")
            else:
                st.write("_Ch∆∞a c√≥ c√¢u tr·∫£ l·ªùi._")
    except FileNotFoundError:
        st.info("‚è≥ Ch∆∞a c√≥ d·ªØ li·ªáu kh·∫£o s√°t. H√£y l√† ng∆∞·ªùi ƒë·∫ßu ti√™n tr·∫£ l·ªùi!")
    except Exception as e:
        st.error(f"L·ªói khi ƒë·ªçc d·ªØ li·ªáu: {e}")
